(()=>{"use strict";const n=n=>{const t=[];let e=0;return n.forEach((n=>{1===n?e++:e>0&&(t.push(e),e=0)})),e>0&&t.push(e),t.length>0?t:[0]},t=(n,t="",e,o)=>`\n      <div \n      class='nonograms__cell${1===n?" filled":""}'\n      x='${e}'\n      y='${o}'\n      >${t}\n      </div>\n  `,e={easy:{"Smiley Face":[[0,1,0,1,0],[0,0,0,0,0],[0,1,0,1,0],[0,0,1,0,0],[1,0,0,0,1]],Heart:[[0,1,0,1,0],[1,1,1,1,1],[1,1,1,1,1],[0,1,1,1,0],[0,0,1,0,0]],Tree:[[0,0,1,0,0],[0,0,1,0,0],[0,1,1,1,0],[0,1,1,1,0],[1,1,1,1,1]],Diamond:[[0,0,1,0,0],[0,1,1,1,0],[1,1,1,1,1],[0,1,1,1,0],[0,0,1,0,0]],Fish:[[0,1,1,0,0],[1,1,1,1,0],[0,1,1,0,0],[0,0,1,1,1],[0,0,0,1,0]],Rocket:[[1,0,1,0,0],[1,1,1,1,0],[0,1,1,1,0],[0,1,1,0,0],[0,0,1,0,0]],Sailboat:[[0,0,1,0,0],[0,1,1,1,0],[1,0,1,0,1],[1,1,1,1,1],[0,0,1,0,0]],House:[[0,1,1,1,0],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[0,1,1,1,0]],Star:[[0,0,1,0,0],[0,1,1,1,0],[1,1,1,1,1],[0,1,1,1,0],[0,0,1,0,0]],Arrow:[[0,0,1,0,0],[0,0,1,0,0],[0,1,1,1,0],[1,0,1,0,1],[0,0,1,0,0]]},medium:{Dragon:[[0,0,0,0,1,1,1,0,0,0],[0,0,0,0,1,1,1,1,1,0],[0,0,0,1,1,1,1,1,1,1],[0,0,0,0,1,1,1,1,1,1],[0,0,0,1,1,1,1,1,1,0],[0,0,1,1,1,1,1,1,0,0],[0,1,1,1,1,1,1,0,0,0],[1,1,1,1,1,1,0,0,0,0],[1,1,1,1,1,0,0,0,0,0],[1,1,1,0,0,0,0,0,0,0]],Castle:[[0,0,0,0,0,1,1,0,0,0],[0,0,0,0,0,1,1,1,1,0],[0,0,0,1,1,1,1,1,1,1],[0,0,0,0,1,1,1,1,1,1],[0,0,0,1,1,1,1,1,1,0],[0,0,1,1,1,1,1,1,1,0],[0,1,1,1,1,1,1,1,0,0],[1,1,1,1,1,1,1,0,0,0],[1,1,1,1,1,1,0,0,0,0],[1,1,1,1,1,0,0,0,0,0]],Lighthouse:[[0,0,0,1,1,1,0,0,0,0],[0,0,1,1,1,1,1,1,0,0],[0,1,1,1,1,1,1,1,1,0],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,0],[0,1,1,1,1,1,1,1,0,0],[0,0,1,1,1,1,1,0,0,0],[0,0,0,1,1,1,0,0,0,0]],Maze:[[0,0,0,0,0,0,0,0,0,0],[0,1,1,1,1,1,1,1,1,0],[0,1,0,0,0,0,0,0,1,0],[0,1,0,1,1,1,1,0,1,0],[0,1,0,1,0,0,1,0,1,0],[0,1,0,1,0,1,1,0,1,0],[0,1,0,1,0,0,0,0,1,0],[0,1,1,1,1,1,1,1,1,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]],Robot:[[0,0,1,1,1,1,1,0,0,0],[0,0,1,0,0,0,1,0,0,0],[0,1,1,1,1,1,1,1,0,0],[1,1,0,1,1,1,0,1,1,0],[1,1,0,1,1,1,0,1,1,0],[1,1,1,0,0,0,1,1,1,0],[0,1,1,0,0,0,1,1,0,0],[0,0,1,1,1,1,1,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]],"Chess Board":[[1,0,1,0,1,0,1,0,1,0],[0,1,0,1,0,1,0,1,0,1],[1,0,1,0,1,0,1,0,1,0],[0,1,0,1,0,1,0,1,0,1],[1,0,1,0,1,0,1,0,1,0],[0,1,0,1,0,1,0,1,0,1],[1,0,1,0,1,0,1,0,1,0],[0,1,0,1,0,1,0,1,0,1],[1,0,1,0,1,0,1,0,1,0],[0,1,0,1,0,1,0,1,0,1]]},hard:{Spaceship:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,1,1,0,0,0,0,0],[0,0,0,0,1,0,0,0,1,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,1,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,1,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,1,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],Flower:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,0,1,0,0,0,1,0,1,0,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,0,1,0,1,0,0,0,0],[0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],Cityscape:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],"Starry Night":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,0,0,1,0,0,0,0,0],[0,0,0,0,1,0,0,1,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,0,1,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,0,1,0],[0,1,0,0,0,0,0,0,1,0,0,0,0,0,1],[1,0,0,0,0,0,0,1,0,1,0,0,0,0,1],[0,1,0,0,0,0,1,0,0,0,1,0,0,0,0],[0,0,1,0,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0]],"Mountain Range":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,1,1,0,0,1,1,1,0,0,0],[0,0,0,1,1,1,1,1,1,1,1,1,1,0,0],[0,0,1,1,1,1,1,1,1,1,1,1,1,1,0],[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]}},o=()=>`\n        <div class='nonograms__modal-menu'>\n            ${Object.entries(e).map((n=>{return`\n        <div class='nonograms__level'>\n            <h3>${(t=n)[0]}</h3>\n            ${Object.keys(t[1]).map((n=>((n,t)=>`\n        <div class='nonograms__template'\n        level='${t}'\n        value='${n}'\n        >\n            ${n}\n        </div>\n    `)(n,t[0]))).join("")}\n        </div>\n    `;var t})).join("")}\n        </div>\n    `,s=(e,s,a,r)=>{return`<div id="nonograms" class="nonograms">\n      ${a?(c=r,`\n        <div class='nonograms__winner-modal'>\n        <div class="nonograms__winner-content">\n        Great! You have solved the nonogram in ${c} seconds!\n        <button class='button'>Close</button>\n        </div>\n        </div>\n    `):""}\n      \n        <div class='nonograms__navbar'>\n\t\t\n      <div \n          class="nonograms__menu-btn"\n          onClick="document.querySelector\n          ('.nonograms__modal-menu').classList.toggle('active');"\n      >\n          <svg\n              width="18"\n              height="2"\n              viewBox="0 0 18 2"\n              fill="none"\n              xmlns="http://www.w3.org/2000/svg"\n          >\n              <path\n                  d="M1 1H17"\n                  stroke="#403F3D"\n                  stroke-width="1.5"\n                  stroke-linecap="round"\n                  stroke-linejoin="round"\n              />\n          </svg>\n          <svg\n              width="18"\n              height="2"\n              viewBox="0 0 18 2"\n              fill="none"\n              xmlns="http://www.w3.org/2000/svg"\n          >\n              <path\n                  d="M1 1H17"\n                  stroke="#403F3D"\n                  stroke-width="1.5"\n                  stroke-linecap="round"\n                  stroke-linejoin="round"\n              />\n          </svg>\n      </div>\n  \n\t\t${o()}\n        </div>\n    \n      ${(n=>`        \n    <div class="nonograms__header">\n      <h1 class="nonograms__title">Nonograms</h1>\n      <h3 class="nonograms__name">${n}</h3>\n      \n        <div class="nonograms__timer">\n        ${(0).toString().padStart(2,"0")}\n        : ${(0).toString().padStart(2,"0")}\n        </div>\n    \n    </div>\n    `)(s)}\n      ${l=e[s],`      \n\t<div class="nonograms__content">\n      ${(e=>{const o=e.length>0?e[0].length:0,s=e.map((t=>n(t))),a=Array.from({length:o},((t,o)=>n(e.map((n=>n[o])))));return`\n        <div class='nonograms__board'>\n            <div class='nonograms__grid'>\n                ${r=s,`\n    <div \n    class='nonograms__row-numbers'\n    >\n    <div class='nonograms__row-pairs'>\n    ${r.map((n=>`<div class='nonograms__clues-row-group'>\n        ${n.map((n=>t(0,n))).join("")}\n        </div>`)).join("")}\n    </div>\n    </div>\n    `}\n                <div class='nonograms__grid-inner'>\n                    ${(n=>`\n    <div \n    class='nonograms__col-numbers'\n    >\n    <div class='nonograms__col-pairs'>\n    ${n.map((n=>`<div class='nonograms__clues-col-group'>\n        ${n.map((n=>t(0,n))).join("")}\n        </div>`)).join("")}\n    </div>\n    </div>\n    `)(a)}\n                    ${(n=>`\n        <div \n            class='nonograms__field'\n            style='grid-template-columns: repeat(${n.length}, auto)'\n        >\n        ${n.map(((n,e)=>n.map(((n,o)=>t(n,"",e,o))).join(""))).join("")}\n        </div>\n    `)(e)}\n                </div>\n            </div>\n        </div>\n    `;var r})(l)}\n    </div>\n\t`}\n            \n\t<div class="nonograms__controlers">\n\t\t<button class="nonograms__reset button">\n\t\t\tReset game\n\t\t</button>\n\t\t<button class="nonograms__save button">\n\t\t\tSave\n\t\t</button>\n\t\t<button class="nonograms__last button">\n\t\t\tPlay last game\n\t\t</button>\n\t\t<button class="nonograms__random button">\n\t\t\tRandom Game\n\t\t</button>\n\t\t<button class="nonograms__theme button"\n\t\t\tonclick="document.body.classList\n\t\t\t.toggle('dark')"\n\t\t>\n\t\t\tChange Theme\n\t\t</button>\n\t\t<button class="nonograms__solution button">\n\t\t\tSolution\n\t\t</button>\n\t\t<button class="nonograms__toggle-sound button">\n\t\t\tOn/Off &#xf001;\n\t\t</button>\n\t\t<button class="nonograms__story button">\n\t\t\tPrevious Games\n\t\t</button>\n  \t</div>\n\t\n    </div>\n    `;var l,c},a=n=>{var t,e,o=0,s=0;for(t in n)Object.prototype.hasOwnProperty.call(n,t)&&(o+=1);for(t in e=Math.floor(Math.random()*o),n)if(Object.prototype.hasOwnProperty.call(n,t)){if(s===e)return t;s+=1}};let r=!1,l=JSON.parse(localStorage.getItem("isDark"))||!1,c=!1,i=0,d=0;const m=new Audio("./audios/click-sound.wav"),g=new Audio("./audios/win.wav"),u=new Audio("./audios/right-click.mp3"),v=n=>{c||n.play()},_=()=>(i++,60===i&&(i=0,d++,60===d&&(d=0)),`\n        <div class="nonograms__timer">\n            ${d.toString().padStart(2,"0")} :\n\t\t\t${i.toString().padStart(2,"0")}\n        </div>\n    `),h=n=>{const t=n.target,[o,s]=((n,t)=>[n,t])(t.getAttribute("level"),t.getAttribute("value"));clearInterval(r),({seconds:i,minutes:d}={seconds:0,minutes:0}),p(e,o,s,!1),r=0},p=(n,t="easy",e,o)=>{let b=(S=n[t][e].length,Array.from({length:S},(()=>Array.from({length:S},(()=>0)))));var S;const y=i+60*d,f=s(n[t],e,o,y),k=document.getElementById("main");k?k.innerHTML=f:document.body.innerHTML=`<div id="main">${f}</div>`,l&&document.body.classList.add("dark");const $=document.querySelectorAll(".nonograms__template");$?.forEach((n=>{n?.addEventListener("click",h)}));const w=document.querySelector(".nonograms__field");w.addEventListener("contextmenu",(n=>{n.preventDefault();const t=n.target.closest(".nonograms__cell");t&&(t.classList.toggle("crossed"),t.classList.remove("checked"),v(u),r||(r=setInterval((()=>{document.querySelector(".nonograms__timer").innerHTML=_()}),1e3)))})),w.addEventListener("click",(o=>{const s=o.target.closest(".nonograms__cell");if(s){s.classList.toggle("checked"),s.classList.remove("crossed"),v(m),r||(r=setInterval((()=>{document.querySelector(".nonograms__timer").innerHTML=_()}),1e3));const[o,a]=[s.getAttribute("x"),s.getAttribute("y")];b[o][a]=s.classList.contains("checked")?1:0,((n,t)=>{for(let e=0;e<n.length;e++)for(let o=0;o<n[e].length;o++)if(n[e][o]!==t[e][o])return!1;return!0})(n[t][e],b)&&(clearInterval(r),r=!1,v(g),p(n,t,e,!0))}})),document.querySelector(".nonograms__winner-modal .button")?.addEventListener("click",(()=>{({seconds:i,minutes:d}={seconds:0,minutes:0}),p(n,t,e,!1)})),document.querySelector(".nonograms__reset").addEventListener("click",(()=>{clearInterval(r),({seconds:i,minutes:d}={seconds:0,minutes:0}),p(n,t,e,!1),r=!1})),document.querySelector(".nonograms__save").addEventListener("click",(()=>{const n=JSON.stringify([i,d]),o=JSON.stringify(b);localStorage.setItem("level",t),localStorage.setItem("template",e),localStorage.setItem("matrixData",o),localStorage.setItem("spentTime",n),localStorage.setItem("isDark",l)})),document.querySelector(".nonograms__last").addEventListener("click",(()=>{const t=localStorage.getItem("level"),e=localStorage.getItem("template"),o=localStorage.getItem("matrixData");clearInterval(r),({seconds:i,minutes:d}={seconds:0,minutes:0}),[i,d]=JSON.parse(localStorage.getItem("spentTime")),p(n,t,e,!1),r=!1,b=JSON.parse(o),document.querySelector(".nonograms__timer").innerHTML=_();const s=b.length||0;for(let n=0;n<s;n++)for(let t=0;t<s;t++)if(1===b[n][t]){const e=n*s+t;document.querySelectorAll(".nonograms__field  .nonograms__cell")[e].classList.add("checked")}})),document.querySelector(".nonograms__random").addEventListener("click",(()=>{t=a(n),e=a(n[t]),clearInterval(r),({seconds:i,minutes:d}={seconds:0,minutes:0}),r=!1,p(n,t,e,!1)})),document.querySelector(".nonograms__solution").addEventListener("click",(()=>{Array.from(w.children).forEach((n=>n.classList.remove("checked"))),Array.from(w.children).forEach((n=>n.classList.remove("crossed")));const o=n[t][e];o.forEach(((n,t)=>{n.forEach(((n,e)=>{1===n&&(b[t][e]=n,w.children[t*o.length+e].classList.add("checked"))}))}))})),document.querySelector(".nonograms__theme").addEventListener("click",(()=>{l=!l,localStorage.setItem("isDark",l)})),document.querySelector(".nonograms__toggle-sound").addEventListener("click",(()=>{c=!c}))};(()=>{let n=a(e.easy);p(e,"easy",n,!1)})()})();